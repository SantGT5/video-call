version: "3.9"

services:
  api:
    restart: always
    networks:
      - video-call
      - mailer
    volumes:
      - ./api:/app
      - /app/node_modules
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - 8080:8080
    env_file:
      - .env

  mailer:
    restart: always
    networks:
      - mailer
    volumes:
      - ./mailer:/app
      - /app/node_modules
    build:
      context: ./mailer
      dockerfile: Dockerfile.dev
    env_file:
      - .env

  mongo:
    build:
      context: ./mongodb
      dockerfile: Dockerfile
    restart: always
    networks:
      - video-call
    volumes:
      - mongo-data:/data/db
      - ./mongodb/config/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://mongo:27017 --quiet
      interval: 5s
      timeout: 5s
      retries: 3
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: video-call

  mongo-express:
    image: mongo-express:1.0.0-20-alpine3.18
    restart: unless-stopped
    networks:
      - video-call
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_SITE_BASEURL: /
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_PASSWORD}

networks:
  video-call:
    driver: bridge
  mailer:
    driver: bridge

volumes:
  mongo-data:
    driver: local
